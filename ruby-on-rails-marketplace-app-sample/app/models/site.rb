class Site < ActiveRecord::Base
	has_paper_trail
	acts_as_paranoid

	before_create :populate_model
	serialize :settings, JSON

	def settings
		self.settings = {} if read_attribute(:settings).blank?
		super
	end

	serialize :env, JSON

	def env
		self.env = {} if read_attribute(:env).blank?
		super
	end

	has_many :users

	has_many :listings
	has_many :businesses
	has_many :listing_drafts
	has_many :categories
	has_many :queries
	has_many :searches
	has_many :template_files
	has_many :plans
	has_many :posts
	has_many :boost_levels
	has_many :boost_intervals
	has_many :support_tickets
	has_many :category_syndicates

	belongs_to :redirect,
		class_name: 'Site'

	def active_listings
		listings.where(complete:true, deleted:false, expired:false)
	end

	# Sitemap (Autogenerated)

	has_many :links

	def sitemap
		return sitemap_entries.order(lastmod: :desc).order(updated_at: :desc)
	end

	# @widget.impressionist_count(:start_date=>"2011-01-01")
	is_impressionable :counter_cache => true, :column_name => :visits

	# Method: initialize_environment
	# Description: A helper to load any site specific initializers.
	# 						 Overrides values from the initializer directory.
	def initialize_environment
		# Stripe init to api keys.
		# Mailgun
		# env['KEY'] <= DB stored environment keys.
	end

	# ---------------------------------------------
	# Class helpers:
	# ---------------------------------------------

	# Method: self.load_from_host
	# Description: Loads a site from a request object.
	# 						 Returns nil if none is found.
	def self.load_from_host(host)
		# find_or_create_by(host:host.downcase+"#{ host.port == "80" ? "" : ":#{host.port}" }") do |s|
		find_or_create_by(host:host.downcase) do |s|
			s.active = false
			s.save(validate:false)
		end if host
	end

	# ---------------------------------------------
	# Reference to photos (edited and compressed to jpg 95%) and files (original)
	# ---------------------------------------------

	# Direct Photo File Association:
	has_many :photos

	# ---------------------------------------------
	# Meta helpers:
	# ---------------------------------------------

	def link
		"http#{ force_ssl ? 's' : '' }://#{ host_with_port }"
	end

	# TODO: Needs to reference the protocol preference of the site settings configuration file! NOT default to the "https://"
	def full_host
		return "https://" + self.host if self.force_ssl
		"http://" + self.host
	end

	def host_with_port
		"#{ host }#{ (port and port != 80) ? ":#{ port }" : "" }"
	end

	def name
		read_attribute(:name) || host
	end

	def established_at
		read_attribute(:established_at) || created_at
	end

	def FREE_PLAN
		@free_plan ||= plans.where('amount <= 0').where(active: true).first
		@free_plan ||= plans.find_or_create_by(name: 'Buyer', active: true, amount: 0)
	end

	# ---------------------------------------------
	# Meta helpers:
	# ---------------------------------------------

	def populate_model
		established_at ||= Time.now
	end

	rails_admin do
		exclude_fields :queries, :listings
	end
end
